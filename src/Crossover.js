// Generated by CoffeeScript 1.7.1
(function() {
  var Crossover,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Crossover = (function() {
    function Crossover() {}

    Crossover.randomIndex = function(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
    };

    Crossover.onePoint = function(mom, dad) {
      var index;
      index = this.randomIndex(0, mom.length);
      return mom.slice(0, index).concat(dad.slice(index));
    };

    Crossover.twoPoint = function(mom, dad) {
      var child, element, index, leftIndex, rightIndex, _i, _j, _len, _results;
      leftIndex = this.randomIndex(0, mom.length - 2);
      rightIndex = this.randomIndex(leftIndex, mom.length);
      child = [];
      for (index = _i = 0, _len = mom.length; _i < _len; index = ++_i) {
        element = mom[index];
        if (__indexOf.call((function() {
          _results = [];
          for (var _j = leftIndex; leftIndex <= rightIndex ? _j <= rightIndex : _j >= rightIndex; leftIndex <= rightIndex ? _j++ : _j--){ _results.push(_j); }
          return _results;
        }).apply(this), index) >= 0) {
          child.push(dad[index]);
        } else {
          child.push(element);
        }
      }
      return child;
    };

    Crossover.uniform = function(mom, dad) {
      var child, element, index, _i, _len;
      child = [];
      for (index = _i = 0, _len = mom.length; _i < _len; index = ++_i) {
        element = mom[index];
        if (Math.random() < 0.5) {
          child.push(element);
        } else {
          child.push(dad[index]);
        }
      }
      return child;
    };

    return Crossover;

  })();

  window.Crossover = Crossover;

}).call(this);

//# sourceMappingURL=Crossover.map
