// Generated by CoffeeScript 1.7.1
(function() {
  var Mutation;

  Mutation = (function() {
    function Mutation() {}

    Mutation.randomIndex = function(min, max) {
      return Math.floor(Math.random() * (max - min + 1)) + min;
    };

    Mutation.bitFlip = function(genome, rate) {
      var genomeLength, i, index, numberOfMutations, _i;
      if (rate == null) {
        rate = 0.2;
      }
      genomeLength = genome.length;
      numberOfMutations = Math.floor(genomeLength * rate);
      for (i = _i = 0; 0 <= numberOfMutations ? _i < numberOfMutations : _i > numberOfMutations; i = 0 <= numberOfMutations ? ++_i : --_i) {
        index = Math.floor(Math.random() * genomeLength);
        if (genome[index] === 0) {
          genome[index] = 1;
        } else {
          genome[index] = 0;
        }
      }
      return genome;
    };

    Mutation.inverse = function(genome) {
      var index1, index2, _ref;
      index1 = this.randomIndex(1, genome.length - 1);
      index2 = this.randomIndex(1, genome.length - 1);
      _ref = [genome[index2], genome[index1]], genome[index1] = _ref[0], genome[index2] = _ref[1];
      return genome;
    };

    return Mutation;

  })();

  this.Mutation = Mutation;

}).call(this);

//# sourceMappingURL=Mutation.map
